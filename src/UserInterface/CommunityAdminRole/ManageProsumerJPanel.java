/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CommunityAdminRole;

import Business.Person.Person;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.ConsumerOrganization;
import Business.Organization.Organization;
import Business.Organization.ProsumerOrganization;
import Business.Role.ConsumerRole;
import Business.Role.ProsumerRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.objects.Global.instance;

/**
 *
 * @author Pratik
 */
public class ManageProsumerJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Enterprise enterprise;
    Network network;
    private int organizationcount;

    /**
     * Creates new form ManageProsumerJPanel
     */
    public ManageProsumerJPanel(JPanel userProcessContainer, Network network, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.network = network;
        populateTable();
        populateEnterpriseTypeComboBox();
        populateEnterpriseComboBox(enterprise); //Check****
        popOrganizationComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        //for (Network network : system.getNetworkDirectory().getNetworkList()) {
        //for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {//for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
        //for (UserAccount userAccount : network.getUserAccountDirectory().getUserAccountList()) {//for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount userAccount : org.getUserAccountDirectory().getUserAccountList()) {
                Object[] row = new Object[4];
                row[0] = enterprise.getName();//enterprise.getName();
                row[1] = enterprise.getEnterpriseType();
                row[2] = org.getName();
                row[3] = userAccount.getUsername();

                model.addRow(row);
            }
        }
        //}
    }

    private void populateEnterpriseTypeComboBox() {
        enterpriseTypeJComboBox.removeAllItems();

//        for (Network network : system.getNetworkDirectory().getNetworkList()){
//            enterpriseTypeJComboBox.addItem(network);
//        }
        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
            enterpriseTypeJComboBox.addItem(type);
        }
    }

    private void populateEnterpriseComboBox(Enterprise enterprise) {//(Network network){
        enterpriseJComboBox.removeAllItems();

        //for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
        enterpriseJComboBox.addItem(enterprise);
        //}

    }

    public void popOrganizationComboBox() {
        organizationJComboBox.removeAllItems();
        organizationcount = 0;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            organizationJComboBox.addItem(organization);
            organizationcount = organizationcount + 1;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        enterpriseTypeJComboBox = new javax.swing.JComboBox();
        enterpriseJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtProsumerId = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        roleJComboBox = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Enterprise Name", "Enterprise Type", "Organization", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        jLabel5.setText("Name");

        jLabel1.setText("Enterprise Type");

        backJButton.setBackground(new java.awt.Color(0, 153, 102));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Enterprise");

        enterpriseTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseTypeJComboBoxActionPerformed(evt);
            }
        });

        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Username");

        submitJButton.setBackground(new java.awt.Color(0, 153, 102));
        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Password");

        txtCity.setEnabled(false);

        jLabel7.setText("Prosumer/Consumer Id");

        txtProsumerId.setEnabled(false);

        jLabel9.setText("Address");

        jLabel10.setText("Community");

        txtCommunity.setEnabled(false);

        jLabel11.setText("City");

        jLabel12.setText("Role");

        roleJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleJComboBoxActionPerformed(evt);
            }
        });

        jLabel13.setText("Organization");

        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 153));
        jLabel6.setText("Manage Prosumer and Consumer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(enterpriseJComboBox, 0, 160, Short.MAX_VALUE)
                                    .addComponent(enterpriseTypeJComboBox, 0, 160, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(passwordJPasswordField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(usernameJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(backJButton, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel12)
                                            .addGap(18, 18, 18))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(38, 38, 38)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(submitJButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(jLabel7)
                        .addGap(54, 54, 54)
                        .addComponent(txtProsumerId, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap(236, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(309, 309, 309)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(enterpriseTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProsumerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(submitJButton))
                .addGap(196, 196, 196))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
//        Component[] componentArray = userProcessContainer.getComponents();
//        Component component = componentArray[componentArray.length - 1];
//        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
//        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void enterpriseTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseTypeJComboBoxActionPerformed

//        Network network = (Network) enterpriseTypeJComboBox.getSelectedItem();
//        if (network != null){
//            populateEnterpriseComboBox(network);
//        }
    }//GEN-LAST:event_enterpriseTypeJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
        // Network network = (Network) enterpriseTypeJComboBox.getSelectedItem();
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();

        if (organizationcount == 0) {
            JOptionPane.showMessageDialog(this, "Please Create Organization to create users", "Create User", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String username = usernameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();

        String address = txtAddress.getText();
        String community = enterprise.getName();//(String) enterpriseJComboBox.getSelectedItem(); //txtCommunity.getText();
        //String city        = txtCity.getText();
        String city = network.getName();

        for (Enterprise entType : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (entType != null) {
                if (!entType.getUserAccountDirectory().checkIfUsernameIsUnique(username)) {
                    JOptionPane.showMessageDialog(this, "User Name Already Exists", "Create User", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                for (Organization orgType : entType.getOrganizationDirectory().getOrganizationList()) {
                    if (orgType != null) {
                        if (!orgType.getUserAccountDirectory().checkIfUsernameIsUnique(username)) {
                            JOptionPane.showMessageDialog(this, "User Name Already Exists", "Create User", JOptionPane.ERROR_MESSAGE);
                            return;
                        }

                        for (UserAccount UA : orgType.getUserAccountDirectory().getUserAccountList()) {
                            if (UA.getUsername().equalsIgnoreCase(username)) {
                                JOptionPane.showMessageDialog(this, "User Name Already Exists", "Create User", JOptionPane.ERROR_MESSAGE);
                                return;
                            }
                        }
                    }
                }

            }
        }

        for (Organization orgType : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (orgType != null) {
                if (!orgType.getUserAccountDirectory().checkIfUsernameIsUnique(username)) {
                    JOptionPane.showMessageDialog(this, "User Name Already Exists", "Create User", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                for (UserAccount UA : orgType.getUserAccountDirectory().getUserAccountList()) {
                    if (UA.getUsername().equalsIgnoreCase(username)) {
                        JOptionPane.showMessageDialog(this, "User Name Already Exists", "Create User", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
            }
        }

        if (usernameJTextField.getText().trim().length() == 0) {
            /**
             * show Error Message
             */
            JOptionPane.showMessageDialog(this, "Enter User Name", "Create User", JOptionPane.ERROR_MESSAGE);
        } else if (!network.getUserAccountDirectory().checkIfUsernameIsUnique(username)) {

            JOptionPane.showMessageDialog(this, "User Name Already Exists", "Create User", JOptionPane.ERROR_MESSAGE);
        } else if (password.trim().length() == 0) {
            /**
             * show Error Message
             */
            JOptionPane.showMessageDialog(this, "Enter Password", "Create User", JOptionPane.ERROR_MESSAGE);
        } else if (name.trim().length() == 0) {
            /**
             * show Error Message
             */
            JOptionPane.showMessageDialog(this, "Enter Name", "Create User", JOptionPane.ERROR_MESSAGE);
        } else if (!enterprise.getUserAccountDirectory().checkIfUsernameIsUnique(username)) {

            JOptionPane.showMessageDialog(this, "User Name Already Exists", "Create User", JOptionPane.ERROR_MESSAGE);
        } else if (address.trim().length() == 0) {
            /**
             * show Error Message
             */
            JOptionPane.showMessageDialog(this, "Enter Address", "Create User", JOptionPane.ERROR_MESSAGE);
        } else {

        //String firstName   = txtFirstName.getText();
            //String lastName    = txtLasttName.getText();
            if (!organization.getUserAccountDirectory().checkIfUsernameIsUnique(username)) {

                JOptionPane.showMessageDialog(this, "User Name Already Exists", "Create User", JOptionPane.ERROR_MESSAGE);
                return;
            }

//         if (firstName.) {
//             
//         }
            // Person employee = enterprise.getEmployeeDirectory().createEmployee(name);
            Person employee = organization.getEmployeeDirectory().createEmployee(name);//enterprise.getEmployeeDirectory().createEmployee(name);

        //employee.setFirstName(firstName);
            // employee.setLastName(lastName);
            txtCity.setText(city);

            employee.setAddress(address);
            employee.setCommunity(community);
            employee.setCity(city);

            txtCommunity.setText(community); //check****

            //check*** display only PowerManagement Id****
            txtProsumerId.setText(employee.getPersonId());

        //Employee employee = network.getEmployeeDirectory().createEmployee(name);
            //UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
            //UserAccount account = network.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
            //UserAccount account = network.getUserAccountDirectory().createUserAccount(username, password, employee, new CommunityAdminRole());
//UserAccount account = network.getUserAccountDirectory().createUserAccount(username, password, employee, new PowerRegulationAuthorityRole());
            //UserAccount account = network.getUserAccountDirectory().createUserAccount(username, password, employee, new ProsumerRole());
            if (organization instanceof ProsumerOrganization) {
                employee.getProsumer().setAutomatePowerDistribution("N");
                UserAccount account = organization.getUserAccountDirectory().createUserAccount(username, password, employee, new ProsumerRole());//enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new ProsumerRole());
                JOptionPane.showMessageDialog(this, "Prosumer User Account has been Created", "User Account", JOptionPane.INFORMATION_MESSAGE);
            } else if (organization instanceof ConsumerOrganization) {
                UserAccount account = organization.getUserAccountDirectory().createUserAccount(username, password, employee, new ConsumerRole());//enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new ProsumerRole());
                JOptionPane.showMessageDialog(this, "Consumer User Account has been Created", "User Account", JOptionPane.INFORMATION_MESSAGE);
            }

            usernameJTextField.setText("");
            passwordJPasswordField.setText("");
            nameJTextField.setText("");
            txtAddress.setText("");
            txtCity.setText("");
            txtCommunity.setText("");
            txtProsumerId.setText("");

            populateTable();
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    private void roleJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleJComboBoxActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null) {
            //populateEmployeeComboBox(organization);
            populateRoleComboBox(organization);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void populateRoleComboBox(Organization organization) {
        roleJComboBox.removeAllItems();
        for (Role role : organization.getSupportedRole()) {
            roleJComboBox.addItem(role);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtProsumerId;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
