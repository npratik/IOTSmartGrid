/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ProsumerRole;

import Business.Enterprise.Enterprise;
import Business.Organization.ProsumerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PowerManagementWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Random;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik
 */
public class ProsumerManageEnergyResourcesPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private ProsumerOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private int currentPowerUtilized;
    private int currentPowerInputGenerated;
    private int currentExcessPower;

    private int checkCurrentPowerGenerated;

    /**
     * Creates new form ProsumerManageEnergyResourcesJPanel
     */
    public ProsumerManageEnergyResourcesPanel(JPanel userProcessContainer, UserAccount account, ProsumerOrganization organization, Enterprise enterprise) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        populateRequestTable();

        Random r1 = new Random();
        currentPowerUtilized = r1.nextInt(100 - 60) + 60;

        Random r2 = new Random();
        currentPowerInputGenerated = r2.nextInt(220 - 100) + 104;

        currentExcessPower = currentPowerInputGenerated - currentPowerUtilized;
        //Setting Power Details for the prosumer  

        checkCurrentPowerGenerated = userAccount.getEmployee().getProsumer().getCurrentPowerGenerated();

        //If the sensor data is not set, then the sensor data is set.
        if (checkCurrentPowerGenerated <= 0) {
            userAccount.getEmployee().getProsumer().setCurrentExcessPower(currentExcessPower);
            userAccount.getEmployee().getProsumer().setCurrentPowerGenerated(currentPowerInputGenerated);
            userAccount.getEmployee().getProsumer().setCurrentUtilizedPower(currentPowerUtilized);
        }
        txtCurrentUtilizedPower.setText(String.valueOf(userAccount.getEmployee().getProsumer().getCurrentUtilizedPower()));
        txtCurrentPowerInputGenerated.setText(String.valueOf(userAccount.getEmployee().getProsumer().getCurrentPowerGenerated()));
        txtCurrentExcessPower.setText(String.valueOf(userAccount.getEmployee().getProsumer().getCurrentExcessPower()));

//        txtCurrentUtilizedPower.setText(String.valueOf(currentPowerUtilized));
//        txtCurrentPowerInputGenerated.setText(String.valueOf(currentPowerInputGenerated));
//        txtCurrentExcessPower.setText(String.valueOf(currentExcessPower));
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = userAccount.getEmployee().getPersonId();//request.getMessage();
            row[1] = request.getReceiver(); //enterprise.getName();
            row[2] = ((PowerManagementWorkRequest) request).getProsumerSentpower();
            row[3] = request.getStatus();
            String result = ((PowerManagementWorkRequest) request).getResult();
            row[4] = result == null ? "Waiting" : result;

            model.addRow(row);
            //to refresh when power transfered from previous page.
            txtCurrentExcessPower.setText(String.valueOf(userAccount.getEmployee().getProsumer().getCurrentExcessPower()));

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCurrentUtilizedPower = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCurrentPowerInputGenerated = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSharePower = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        txtCurrentExcessPower = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Manage Energy Resourses");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Current Utilized Power");

        txtCurrentUtilizedPower.setEnabled(false);
        txtCurrentUtilizedPower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentUtilizedPowerActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Current Power Input/Generated");

        txtCurrentPowerInputGenerated.setEnabled(false);
        txtCurrentPowerInputGenerated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentPowerInputGeneratedActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Current Excess Power ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Would to like to Share Power ?");

        btnSharePower.setBackground(new java.awt.Color(0, 153, 102));
        btnSharePower.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSharePower.setForeground(new java.awt.Color(255, 255, 255));
        btnSharePower.setText("Yes - Share");
        btnSharePower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSharePowerActionPerformed(evt);
            }
        });

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Prosumer Id", "Receiver", "Power Sent", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable);

        txtCurrentExcessPower.setEnabled(false);
        txtCurrentExcessPower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentExcessPowerActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 102));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSharePower, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCurrentExcessPower)
                                    .addComponent(txtCurrentPowerInputGenerated)
                                    .addComponent(txtCurrentUtilizedPower))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCurrentUtilizedPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtCurrentPowerInputGenerated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCurrentExcessPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(btnSharePower))
                .addGap(61, 61, 61)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSharePowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSharePowerActionPerformed
        // TODO add your handling code here:
        //Need to create a WorkRequest to Community Head

        ProsumerSendWorkRequestJPanel prosumerManageEnergyResources = new ProsumerSendWorkRequestJPanel(userProcessContainer, userAccount, (ProsumerOrganization) organization, enterprise, currentPowerUtilized, currentPowerInputGenerated);
        userProcessContainer.add("prosumerManageEnergyResources", prosumerManageEnergyResources); //similar to map functions*** >> ash map*** Check*** if this is required****
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);

    }//GEN-LAST:event_btnSharePowerActionPerformed

    private void txtCurrentPowerInputGeneratedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentPowerInputGeneratedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurrentPowerInputGeneratedActionPerformed

    private void txtCurrentUtilizedPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentUtilizedPowerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurrentUtilizedPowerActionPerformed

    private void txtCurrentExcessPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentExcessPowerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurrentExcessPowerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSharePower;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCurrentExcessPower;
    private javax.swing.JTextField txtCurrentPowerInputGenerated;
    private javax.swing.JTextField txtCurrentUtilizedPower;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
