/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ConsumerRole;

import Business.Enterprise.Enterprise;
import Business.Organization.ConsumerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PowerManagementWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pratik
 */
public class ConsumerViewEnergyUsageJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private ConsumerOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private int currentPowerRequired;
    private int currentPowerInputGenerated;
    private int currentPowerFallingShort;
    private int checkCurrentPowerGenerated;
    private int rowCount;
    private String waitingFlag;
    
    /**
     * Creates new form ConsumerViewEnergyUsageJPanel
     */
    public ConsumerViewEnergyUsageJPanel(JPanel userProcessContainer, UserAccount account, ConsumerOrganization   organization, Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        
        Random r1 = new Random();
        currentPowerInputGenerated = r1.nextInt(100 - 60) + 60;

        Random r2 = new Random();
        currentPowerRequired = r2.nextInt(150 - 100) + 104;
        
        currentPowerFallingShort = currentPowerRequired - currentPowerInputGenerated;
        
         checkCurrentPowerGenerated = userAccount.getEmployee().getProsumer().getCurrentPowerGenerated();
        
         //If the sensor data is not set, then the sensor data is set.
         if (checkCurrentPowerGenerated <= 0) {
          userAccount.getEmployee().getProsumer().setCurrentPowerFallingShort(currentPowerFallingShort);
          userAccount.getEmployee().getProsumer().setCurrentPowerGenerated(currentPowerInputGenerated);
          userAccount.getEmployee().getProsumer().setCurrentPowerRequired(currentPowerRequired);
         }
        txtCurrentPowerRequired.setText(String.valueOf(userAccount.getEmployee().getProsumer().getCurrentPowerRequired()));
        txtCurrentPowerInput.setText(String.valueOf(userAccount.getEmployee().getProsumer().getCurrentPowerGenerated()));
        txtCurrentPowerFallingShort.setText(String.valueOf(userAccount.getEmployee().getProsumer().getCurrentPowerFallingShort()));
        populateRequestTable();
    }
     
    
     public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        rowCount = 0;
        waitingFlag = "N";
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            row[0] = userAccount.getEmployee().getPersonId();//request.getMessage();
            row[1] = request.getReceiver(); //enterprise.getName();
            row[2] = ((PowerManagementWorkRequest) request).getCurrentFalingShortPower();
            row[3] = request.getStatus();
            String result = ((PowerManagementWorkRequest) request).getResult();
            row[4] = result == null ? "Waiting" : result;
            
            model.addRow(row);
            
            if (result == null) {
                waitingFlag = "Y";
            }
           
        }
        rowCount = model.getRowCount();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtCurrentPowerRequired = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCurrentPowerInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCurrentPowerFallingShort = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Consumer View Energy Usage");

        backJButton.setBackground(new java.awt.Color(0, 153, 102));
        backJButton.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Current Power Required");

        txtCurrentPowerRequired.setForeground(new java.awt.Color(0, 153, 153));
        txtCurrentPowerRequired.setEnabled(false);
        txtCurrentPowerRequired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentPowerRequiredActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("Current Power Input/Utilized");

        txtCurrentPowerInput.setForeground(new java.awt.Color(0, 153, 153));
        txtCurrentPowerInput.setEnabled(false);
        txtCurrentPowerInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentPowerInputActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setText("Current Power Falling Short");

        txtCurrentPowerFallingShort.setForeground(new java.awt.Color(0, 153, 153));
        txtCurrentPowerFallingShort.setEnabled(false);
        txtCurrentPowerFallingShort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentPowerFallingShortActionPerformed(evt);
            }
        });

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Consumer Id", "Receiver", "Power Falling Short", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtCurrentPowerRequired, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(28, 28, 28)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtCurrentPowerInput, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCurrentPowerFallingShort, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backJButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCurrentPowerRequired, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCurrentPowerInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCurrentPowerFallingShort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(backJButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void txtCurrentPowerRequiredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentPowerRequiredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurrentPowerRequiredActionPerformed

    private void txtCurrentPowerInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentPowerInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurrentPowerInputActionPerformed

    private void txtCurrentPowerFallingShortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentPowerFallingShortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCurrentPowerFallingShortActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCurrentPowerFallingShort;
    private javax.swing.JTextField txtCurrentPowerInput;
    private javax.swing.JTextField txtCurrentPowerRequired;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
