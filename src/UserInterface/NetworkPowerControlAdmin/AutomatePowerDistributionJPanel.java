/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.NetworkPowerControlAdmin;

import Business.Network.Network;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Pratik
 */
public class AutomatePowerDistributionJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private Network network;
    private UserAccount userAccount;
    /**
     * Creates new form AutomatePowerDistributionJPanel
     */
    public AutomatePowerDistributionJPanel(JPanel userProcessContainer, UserAccount userAccount, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.userAccount = userAccount;
        
        displayValues();
        savejButton.setEnabled(false);

    }
    
    private void displayValues() {
        txtSetThresholdLevelForSupply.setText(String.valueOf(userAccount.getEmployee().getProsumer().getSetThresholdForPowerSupply()));
        txtAutomateFunctionEnabled.setText(userAccount.getEmployee().getProsumer().getAutomatePowerDistribution());
        if (userAccount.getEmployee().getProsumer().getAutomatePowerDistribution().equalsIgnoreCase("Y")){
           jCheckBoxForAutomate.setEnabled(true);
           jCheckBoxForAutomate.setSelected(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jCheckBoxForAutomate = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txtSetThresholdLevelForSupply = new javax.swing.JTextField();
        savejButton = new javax.swing.JButton();
        updatejButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtAutomateFunctionEnabled = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Automate Power Distribution");

        jCheckBoxForAutomate.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxForAutomate.setForeground(new java.awt.Color(0, 153, 153));
        jCheckBoxForAutomate.setText(" Check to Automate");
        jCheckBoxForAutomate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxForAutomateActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setText("Threshold for Power Supply");

        savejButton.setBackground(new java.awt.Color(0, 153, 102));
        savejButton.setForeground(new java.awt.Color(255, 255, 255));
        savejButton.setText("Save");
        savejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savejButtonActionPerformed(evt);
            }
        });

        updatejButton.setBackground(new java.awt.Color(0, 153, 102));
        updatejButton.setForeground(new java.awt.Color(255, 255, 255));
        updatejButton.setText("Update");
        updatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatejButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(0, 153, 102));
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Automate Function Enabled");

        txtAutomateFunctionEnabled.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(37, 37, 37)
                        .addComponent(txtAutomateFunctionEnabled, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jCheckBoxForAutomate)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(34, 34, 34)
                            .addComponent(txtSetThresholdLevelForSupply, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(backJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(savejButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(87, 87, 87)
                            .addComponent(updatejButton))))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSetThresholdLevelForSupply, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAutomateFunctionEnabled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxForAutomate)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(savejButton)
                    .addComponent(updatejButton))
                .addGap(28, 28, 28)
                .addComponent(backJButton)
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxForAutomateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxForAutomateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxForAutomateActionPerformed

    private void savejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savejButtonActionPerformed
        // TODO add your handling code here:

        if (jCheckBoxForAutomate.isSelected()==true) {

        }

        if (!ValidateThresholdNumber()) {
            JOptionPane.showMessageDialog(this, "Enter Valid Number for Treshold Power Supply", "Automate Request", JOptionPane.ERROR_MESSAGE);
        } else if (Integer.parseInt(txtSetThresholdLevelForSupply.getText()) <= 0) {
            JOptionPane.showMessageDialog(this, "Enter a Positive Number for Treshold Power Supply", "Automate Request", JOptionPane.ERROR_MESSAGE);
        } else {

            int thresholdLevelForSupply = Integer.parseInt(txtSetThresholdLevelForSupply.getText().trim());

            userAccount.getEmployee().getProsumer().setSetThresholdForPowerSupply(thresholdLevelForSupply);
            if (jCheckBoxForAutomate.isSelected()==true) {
                userAccount.getEmployee().getProsumer().setAutomatePowerDistribution("Y");
                //JOptionPane.showMessageDialog(null, "Your request on Automate Power Distribution has been updated succesfully - Yes", "Update", JOptionPane.INFORMATION_MESSAGE);
            } else {
                userAccount.getEmployee().getProsumer().setAutomatePowerDistribution("N");
                //JOptionPane.showMessageDialog(null, "Your request on Automate Power Distribution has been updated succesfully- No", "Update", JOptionPane.INFORMATION_MESSAGE);
            }
            displayValues();
            JOptionPane.showMessageDialog(null, "Your request on Automate Power Distribution has been updated succesfully", "Update", JOptionPane.INFORMATION_MESSAGE);

            savejButton.setEnabled(false);
            updatejButton.setEnabled(true);
        }
    }//GEN-LAST:event_savejButtonActionPerformed

    private void updatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatejButtonActionPerformed
        // TODO add your handling code here:
        //        txtRespiratoryRate.setEnabled(true);
        //        txtHeartRate.setEnabled(true);
        //        txtSystolicBloodPressure.setEnabled(true);
        //        txtWeightinPounds.setEnabled(true);
        txtSetThresholdLevelForSupply.setEditable(true);
        savejButton.setEnabled(true);
        updatejButton.setEnabled(false);
    }//GEN-LAST:event_updatejButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JCheckBox jCheckBoxForAutomate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton savejButton;
    private javax.swing.JTextField txtAutomateFunctionEnabled;
    private javax.swing.JTextField txtSetThresholdLevelForSupply;
    private javax.swing.JButton updatejButton;
    // End of variables declaration//GEN-END:variables

private boolean ValidateThresholdNumber() {
        try {
            Integer.parseInt(txtSetThresholdLevelForSupply.getText());
            return true;
        } catch (Exception e) {
            return false;
        }
    }
}
